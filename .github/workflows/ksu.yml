name: Build KernelSU
on:
  watch:
    types: [started]

  workflow_dispatch:

jobs:
  build:
    name: Build KernelSU
    runs-on: ubuntu-latest
    container: ghcr.io/ozipoetra/docker:main
    steps:
    - uses: actions/checkout@v3
    - name: Download Clang Toolchain
      run: |
        cd $GITHUB_WORKSPACE
        #git clone https://github.com/vijaymalav564/vortex-clang.git -b master --depth=1 clang
        git clone --depth=1 https://gitlab.com/LeCmnGend/proton-clang -b clang-17 clang
        git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_aarch64_aarch64-linux-android-4.9 los-4.9-64
        git clone --depth=1 https://github.com/LineageOS/android_prebuilts_gcc_linux-x86_arm_arm-linux-androideabi-4.9 los-4.9-32


    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE
        git clone https://github.com/ozipoetra/android_kernel_xiaomi_mt6768 -b lineage-20 android-kernel --depth=1

    - name: Kernel patch
      run: |
        cd $GITHUB_WORKSPACE
        git clone https://github.com/ozipoetra/workflow-test -b main --depth=1 patchsu
        cd android-kernel
        git apply $GITHUB_WORKSPACE/patchsu/KernelSU.patch
  
    - name: Setup KernelSU
      run: |
        cd $GITHUB_WORKSPACE/android-kernel
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main

    - name: Build Kernel
      run: |
        cd $GITHUB_WORKSPACE/android-kernel
        export LC_ALL=C
        export PATH=$GITHUB_WORKSPACE/clang/bin:$PATH
        export ARCH=arm64
        export SUBARCH=arm64
        export KBUILD_BUILD_HOST=ozip.my.id
        export KBUILD_BUILD_USER=mitsuaa
        make O=out ARCH=arm64 CC=clang HOSTCC=clang AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip merlin_defconfig
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang HOSTCC=clang AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip savedefconfig
        cp -f out/defconfig arch/arm64/configs/merlin_defconfig
        make -j$(nproc --all) O=out ARCH=arm64 CC="clang" HOSTCC=clang CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE="${PWD}/los-4.9-64/bin/aarch64-linux-android-" CROSS_COMPILE_ARM32="${PWD}/los-4.9-32/bin/arm-linux-androideabi-" LLVM=1 AR=llvm-ar LD=ld.lld NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip CONFIG_NO_ERROR_ON_MISMATCH=y

    - name: Make Anykernel3
      run: |
        cd $GITHUB_WORKSPACE
        git clone https://github.com/osm0sis/AnyKernel3
          sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
          sed -i 's!block=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!block=auto;!g' AnyKernel3/anykernel.sh
          sed -i 's/is_slot_device=0;/is_slot_device=auto;/g' AnyKernel3/anykernel.sh
          cp android-kernel/out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
          rm -rf AnyKernel3/.git* AnyKernel3/README.md
    
    - name: Upload Kernel File
      uses: actions/upload-artifact@v3
      with:
        name: Image.gz-dtb
        path: android-kernel/out/arch/arm64/boot/Image.gz-dtb

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v3
      with:
        name: merlinx-kernel.zip
        path: kernel_workspace/AnyKernel3/*