# Written by ozipoetra // mitsu00
name: Build Tester

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
env:
  WDIR: ${{github.workspace}}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      #- uses: rokibhasansagar/slimhub_actions@main
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 8192
          remove-dotnet: 'true'
          remove-docker-images: 'false'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
      - name: Free Space After Clearing
        run: |
          cd $WDIR
          echo "Free space:"
          df -h
          echo "Current Directory"
          pwd
          ls
      - name: Install Dependency
        run: |
          sudo apt update
          sudo apt-get install git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3
      # Clone Kernel
      - name: Clone Kernel Source
        run: |
          cd $GITHUB_WORKSPACE
          git clone https://github.com/ozipoetra/oc_a13r -b a13r --depth=1 --recursive kernel
      # Download Clang
      - name: Clone Clang
        run: |
          cd $GITHUB_WORKSPACE
          git clone https://gitlab.com/mcdofrenchfreis/android-clang-14.0.7.git --depth=1 clang
      # Build Test (You Can Edit This!)
      - name: Build Kernel
        run: |
          cd $GITHUB_WORKSPACE/kernel
          export KBUILD_BUILD_HOST=ozip.my.id
          export KBUILD_BUILD_USER=ozipoetra
          export PATH=$GITHUB_WORKSPACE/clang/bin:$PATH
          export ARCH=arm64
          export SUBARCH=arm64
          make -j$(nproc --all) O=out ARCH=arm64 CC=clang READELF=llvm-readelf OBJCOPY=llvm-objcopy AS=llvm-as LD=ld.lld NM=llvm-nm OBJDUMP=llvm-objdump STRIP=llvm-strip CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi-