# This is a basic workflow to help you get started with Actions

name: Build Tester

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  slim_build:
    runs-on: ubuntu-latest
    # You can use either of the ubuntu-20.04 or ubuntu-22.04 runner
    steps:
      # You might want to Checkout your repo first, but not mandatory
      - uses: actions/checkout@v3
      # Cleanup The Actions Workspace Using Custom Composite Run Actions
      - uses: rokibhasansagar/slimhub_actions@main
        # Optional key, "retain": Use only if you want something to keep
        with:
          retain: "docker,dockerd,docker-container,docker-compose"
          # The values must match from the below list
      # That's it! Now use your normal steps
  build:
    needs: slim_build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/sushrut1101/docker:arch
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Runs a single command using the runners shell
      - name: Prepare Repo
        run: |
          cd ~
          mkdir ~/.bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/.bin/repo
          chmod a+x ~/.bin/repo
          echo "export PATH=~/bin:$PATH" >> ~/.bashrc
      # Runs a set of commands using the runners shell
      - name: Sync Repo
        run: |
          cd ~
          repo init --depth=1 --no-repo-verify -u https://github.com/alphadroid-project/manifest -b alpha-13 --git-lfs -g default,-mips,-darwin,-notdefault
          git clone https://github.com/mitsu00/local_manifest.git --depth 1 -b alpha .repo/local_manifests
          repo sync -c --no-clone-bundle --optimized-fetch --prune --force-sync --fail-fast -j$(nproc --all)
      - name: Build Test
        run: |
          . build/envsetup.sh
          export WITH_GMS=0
          export ALLOW_MISSING_DEPENDENCIES=true
          export BUILD_USERNAME=ozipoetra
          export BUILD_HOSTNAME=ozip.my.id
          export TZ=Asia/Jakarta
          lunch lineage_merlinx-user
          mka sepolicy
          mka bootimage
          mka init
